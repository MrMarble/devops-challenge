name: Go

on:
  push:
    branches: [ main ]
    paths: ['api/**.go']
  pull_request:
    branches: [ main ]
    paths: ['api/**.go']
  workflow_dispatch:
    

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Install tools
      run: go get -u golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow golang.org/x/lint/golint honnef.co/go/tools/cmd/staticcheck github.com/kisielk/errcheck github.com/securego/gosec/cmd/gosec

    - name: Get dependencies
      run: go get ./api
      env: 
        GOPATH: /home/runner/work/cartodb/cartodb/api

    - name: Run gofmt
      run: |
        golintout="$(gofmt -s -l .)";
        if [ -n "$golintout" ]; then
          awk '{ print $0": format check failed" }' <<< $golintout
          exit 1
        fi
      shell: bash

    - name: Run go vet
      run: go vet

    - name: Run go vet -vettool shadow
      run: go vet -vettool $(which shadow)

    - name: Run golint
      run: golint -set_exit_status ./...

    - name: Run staticcheck
      run: staticcheck ./...

    - name: Run errcheck
      run: errcheck ./...

    - name: Run gosec
      run: gosec -quiet -fmt=golint ./...    

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .
