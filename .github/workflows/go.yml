name: Go

on:
  push:
    branches: [ main ]
    paths: ['api/**.go']
  pull_request:
    branches: [ main ]
    paths: ['api/**.go']

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Run gofmt
      run: |
        golintout="$(gofmt -s -l .)";
        if [ -n "$golintout" ]; then
          awk '{ print $0": format check failed" }' <<< $golintout
          exit 1
        fi
      shell: bash

    - name: Run go vet
      run: go vet

    - name: Run go vet -vettool shadow
      run: go vet -vettool $(which shadow)

    - name: Run golint
      run: golint -set_exit_status ./...

    - name: Run staticcheck
      run: staticcheck ./...

    - name: Run errcheck
      run: errcheck ./...

    - name: Run gosec
      run: gosec -quiet -fmt=golint ./...    

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -v .
